rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // The logic in your app already checks if a user's email is in the
    // 'allowed_emails' list before letting them stay logged in.
    // Therefore, any user who is logged in (request.auth.uid != null)
    // is an approved user and can be treated as an admin.

    // Rule for the email-based access control config
    match /config/access_control {
      allow read: if request.auth.uid != null;
    }

    // Any logged-in (i.e., approved) user can manage all collections.
    match /users/{userId} {
      allow read, write: if request.auth.uid != null;
    }

    match /roles/{roleId} {
      allow read, write: if request.auth.uid != null;
    }

    match /products/{productId} {
      allow read, write: if request.auth.uid != null;
    }
    match /categories/{categoryId} {
      allow read, write: if request.auth.uid != null;
    }

    match /orders/{orderId} {
      allow read, write: if request.auth.uid != null;
    }

    match /evaluations/{evaluationId} {
      allow read, write: if request.auth.uid != null;
    }

    match /exams/{examId} {
      allow read, write: if request.auth.uid != null;
    }

    // ADDED: Rule for the subjects collection
    match /subjects/{subjectId} {
      allow read, write: if request.auth.uid != null;
    }

    // ADDED: Rule for the exam_results collection
    match /exam_results/{examId} {
      // Allow access to the subcollection for logged-in users.
      allow read, write: if request.auth.uid != null;

      match /submissions/{submissionId} {
        allow read, write: if request.auth.uid != null;
      }
    }
  }
}